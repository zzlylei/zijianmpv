name: Auto Update Worker

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 1 * * *" # 每天凌晨1点自动运行
  workflow_dispatch:
    inputs:
      update_latest:
        description: '是否手动更新 Latest 正式版？'
        required: false
        default: 'false'

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: 初始化仓库
        uses: actions/checkout@v4

      - name: 获取当前本地版本
        id: get_local_version
        run: |
          if [ -f version.txt ]; then
            LOCAL_VERSION=$(cat version.txt)
          else
            LOCAL_VERSION=""
          fi
          echo "LOCAL_VERSION=$LOCAL_VERSION" >> $GITHUB_ENV

      - name: 获取最新 Pre-release 和 Latest
        id: get_release
        run: |
          API_URL="https://api.github.com/repos/bia-pain-bache/BPB-Worker-Panel/releases"
          RESPONSE=$(curl -s "$API_URL")

          # 最新 Pre-release
          PRE_RELEASE_TAG=$(echo "$RESPONSE" | jq -r '.[] | select(.prerelease==true) | .tag_name' | head -n 1)
          PRE_RELEASE_DOWNLOAD=$(echo "$RESPONSE" | jq -r '.[] | select(.prerelease==true) | .assets[] | select(.name=="worker.zip") | .browser_download_url' | head -n 1)

          # 最新正式版 Latest（仅提醒）
          LATEST_TAG=$(echo "$RESPONSE" | jq -r '.[] | select(.prerelease==false) | .tag_name' | head -n 1)

          echo "PRE_RELEASE_TAG=$PRE_RELEASE_TAG" >> $GITHUB_ENV
          echo "PRE_RELEASE_DOWNLOAD=$PRE_RELEASE_DOWNLOAD" >> $GITHUB_ENV
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

          echo "最新 Pre-release: $PRE_RELEASE_TAG"
          echo "最新正式版 Latest: $LATEST_TAG (仅提醒)"

      - name: 判断是否需要更新 Pre-release
        id: check_update
        run: |
          if [ "$LOCAL_VERSION" = "$PRE_RELEASE_TAG" ]; then
            echo "UPDATE_NEEDED=false" >> $GITHUB_ENV
            echo "已经是最新 Pre-release 版本"
          else
            echo "UPDATE_NEEDED=true" >> $GITHUB_ENV
            echo "发现新 Pre-release 版本 $PRE_RELEASE_TAG"
          fi

      - name: 更新 Pre-release
        if: env.UPDATE_NEEDED == 'true'
        run: |
          shopt -s extglob
          rm -rf !( .git )
          wget -O worker.zip "$PRE_RELEASE_DOWNLOAD"
          unzip -o worker.zip
          rm worker.zip
          echo "$PRE_RELEASE_TAG" > version.txt

      - name: 提交 Pre-release 更新
        if: env.UPDATE_NEEDED == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🔄 自动同步最新 Pre-release Worker：${{ env.PRE_RELEASE_TAG }}"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          push_options: --force

      - name: 手动更新 Latest
        if: ${{ github.event.inputs.update_latest == 'true' }}
        run: |
          echo "开始手动更新 Latest 正式版 $LATEST_TAG"
          API_URL="https://api.github.com/repos/bia-pain-bache/BPB-Worker-Panel/releases"
          RESPONSE=$(curl -s "$API_URL")
          LATEST_DOWNLOAD=$(echo "$RESPONSE" | jq -r ".[] | select(.tag_name==\"$LATEST_TAG\") | .assets[] | select(.name==\"worker.zip\") | .browser_download_url")
          shopt -s extglob
          rm -rf !( .git )
          wget -O worker.zip "$LATEST_DOWNLOAD"
          unzip -o worker.zip
          rm worker.zip
          echo "$LATEST_TAG" > version.txt
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "🔄 手动同步 Latest Worker：$LATEST_TAG"
          git push --force
